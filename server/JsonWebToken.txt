* 인증(authenticaition) & 인가(authorization)

인증 : 회원가입 로그인->식별자를 브라우저로 전송 (사이트이용을 허락해주는 용도)
인가 : 권한(사이트의 특정기능을 사용할 권한)

인증 != 암호화 
      암호화       복호화
2car  -----> arc  -----> car
키+데이터
↑
대칭키 암호화 알고리즘 (암호화 복호화키가 동일 개인키 암호화)
비대칭키 암호화 알고리즘(공개키 암호화)


JWT토큰 ------------> 문자열
(Json Web Token)
자바스크립트 객체 형태의 문자열


브라우저  ----------> 서버  1.회원가입 요청(사용자 정보 전송)
서버                       2. 사용자정보+비밀키 JWT토큰 생성
서버 -----------> 브라우저  3.JWT토큰 전송
브라우저                   4. 토큰을 브라우저에 저장 (로컬스토리지,쿠키) // 쿠키 - 간단한 데이터 저장, 따로 토큰을 추가하지않아도 요청할 때 마다 쿠키 데이터가 함께 전송, 용량에 제한
브라우저 -----------> 서버  5.서버요청시 JWT 토큰을 함께 전송 
서버요청시                 6. JWT토큰+비밀키 -> 사용자 정보 복호화
서버요청시                 7. 복호화한 사용자 정보가 요청한 기능의 권한을 가지고있는지 비교 후 처리


세션방식 이용자가 많아질수록 서버 부담이 심해짐
브라우저 -> 서버 1 로그인
서버 해당사용자 = 세션id값 부여
서버 - 데이터베이스 -> 세션db에 로그인한 사용자정보 저장
서버 -> 브라우저 세션id 전송
브라우저  세션id값을 로컬스토리지나 쿠키에 저장
브라우저 -> 서버 세션id값 전송
서버 - 전송받은 세션id값 데이터베이스의 정보와 비교 후 처리
